#!/bin/sh

# reference https://stackoverflow.com/questions/5823772/append-ticket-number-using-git-commit-hooks
# check in dev folder https://unix.stackexchange.com/questions/6435/how-to-check-if-pwd-is-a-subdirectory-of-a-given-path

if [[ (! -z ${SKIP_GIT_HOOKS} ) && ${SKIP_GIT_HOOKS}=1 ]]; then
  echo "Skip git hooks prepare-commit-msg"
  exit 0
fi

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

SPECIFIC_FOLDER=""

branch_name=$(git branch --show-current)
echo "branch_name: ${branch_name}"
echo "current working directory: $(pwd)"

# only append message in specific folder
echo "SPECIFIC_FOLDER: ${SPECIFIC_FOLDER}"
# test $(pwd) != ${SPECIFIC_FOLDER}/* && echo true || echo false
if [[ $(pwd) != ${SPECIFIC_FOLDER}/* ]]; then
    echo "not in ${SPECIFIC_FOLDER} folder, skip append message"
    exit 0
fi

# only append message in feature branch
if [[ ${branch_name} != *\/* ]]; then
    echo "branch name does not contain /, skip append message"
    exit 0
fi

# get current comment message
msg=$(head -n 1 ${COMMIT_MSG_FILE})

# skip if commit message is "squash! ", "fixup! " or "amend! ", to make git-rebase remain original behavior
if [[ $msg == squash\!* || $msg == fixup\!* || $msg == amend\!* ]]; then
    echo "commit message is squash! or fixup! or amend!, skip append message"
    exit 0
fi

pr_type=${branch_name%/*}
pr_name=${branch_name#*/}
pr_id=${pr_name%%_*}
echo "pr_type: ${pr_type}"
echo "pr_name: ${pr_name}"
echo "pr_id: ${pr_id}"

# already appended, skip
if [[ $msg == "$pr_type: $pr_id"* ]]; then
    echo "already appended, skip"
    exit 0
fi

# append pr type and id to commit message
sed -i '' '1s/^/'"$pr_type"': '"$pr_id"' /' $COMMIT_MSG_FILE

# show new commit message
head -n 1 $COMMIT_MSG_FILE

# Run local prepare-commit-msg hook if exists
echo "Run local prepare-commit-msg hook if exists"
if [ -e ./.git/hooks/prepare-commit-msg ]; then
    ./.git/hooks/prepare-commit-msg "$@"
else
    exit 0
fi
